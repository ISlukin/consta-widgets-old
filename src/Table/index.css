.table {
  --table-z: 1;
  --sticky-left-z: calc(var(--table-z) + 1);
  --sticky-top-z: calc(var(--sticky-left-z) + 1);
  --sticky-top-and-left-z: calc(var(--sticky-top-z) + 1);
  --resizer-z: calc(var(--sticky-top-and-left-z) + 1);
  --fast-transition: 0.15s ease-out;
  --shadow-color: rgba(0, 29, 46, 0.4);
  --table-border: 1px solid var(--color-bg-border);

  /* обязательно нужно указывать в пикселях, а 0px линтер автоматически исправляет на 0 */
  --resizer-width: calc(0 * 1px);

  position: relative;

  display: grid;
  overflow: auto;

  width: 100%;
  height: 100%;

  border-bottom: var(--table-border);

  &.sizeS {
    --cell-padding-vertical: var(--space-2xs);
    --cell-padding-horizontal: var(--space-xs);
  }

  &.sizeM {
    --cell-padding-vertical: var(--space-xs);
    --cell-padding-horizontal: var(--space-s);
  }

  &.sizeL {
    --cell-padding-vertical: var(--space-s);
    --cell-padding-horizontal: var(--space-m);
  }

  &.isResizable {
    --resizer-width: 5px;
  }
}

.rowWithoutCells {
  position: sticky;
  left: 0;

  display: block;

  grid-column: 1 / -1;

  max-width: var(--table-width);

  background-color: var(--color-bg-default);
}

.cellsRow {
  display: contents;
}

.cell {
  z-index: var(--table-z);

  box-sizing: border-box;

  color: var(--color-typo-primary);
  background-color: var(--color-bg-default);

  &.withoutBorder {
    border: none;
  }

  &.isResized {
    @mixin hyphens;
  }

  &.isClickable {
    cursor: pointer;
  }

  &.stickyOnTop,
  &.stickyOnLeft {
    position: sticky;
  }

  &.stickyOnTop {
    z-index: var(--sticky-top-z);
    top: 0;

    &.isHeader {
      border-bottom: 1px solid var(--color-bg-border);
    }

    &.isResizer {
      z-index: calc(var(--sticky-top-and-left-z) + 1);
    }
  }

  &.stickyOnLeft {
    z-index: var(--sticky-left-z);
    left: 0;

    &.isHeader {
      z-index: var(--sticky-top-and-left-z);
    }

    &.isResizer {
      z-index: calc(var(--sticky-top-and-left-z) + 1);
    }
  }

  &.isHeader {
    font-size: var(--size-text-xs);
    font-weight: bold;
    line-height: var(--line-height-text-xs);

    letter-spacing: 0.05em;
    text-transform: uppercase;
  }

  &:not(.isHeader) {
    font-size: var(--size-text-s);
    line-height: var(--line-height-text-s);
  }

  .borderBetweenRows .cellsRow + .cellsRow & {
    border-top: var(--table-border);
  }

  .borderBetweenColumns .cellsRow & + & {
    border-left: var(--table-border);
  }
}

.wrapper {
  position: relative;

  display: flex;

  height: 100%;

  &.verticalAlignTop {
    align-items: flex-start;
  }

  &.verticalAlignCenter {
    align-items: center;
  }

  &.verticalAlignBottom {
    align-items: flex-end;
  }

  &.horizontalAlignLeft {
    justify-content: flex-start;
  }

  &.horizontalAlignCenter {
    justify-content: center;

    text-align: center;
  }

  &.horizontalAlignRight {
    justify-content: flex-end;

    text-align: right;
  }

  &:not(.withoutPadding) {
    box-sizing: border-box;
    padding-top: var(--cell-padding-vertical);
    padding-right: calc(var(--cell-padding-horizontal) + var(--resizer-width));
    padding-bottom: var(--cell-padding-vertical);
    padding-left: var(--cell-padding-horizontal);
  }

  .cell.stickyOnLeft &::after {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;

    width: var(--space-s);

    content: '';
    pointer-events: none;

    opacity: 0;
    background: linear-gradient(90deg, var(--shadow-color), transparent);

    transition: opacity var(--fast-transition);
    transform: translateX(100%);

    .showVerticalCellShadow & {
      opacity: 1;
    }
  }

  .cellsRow & {
    height: 100%;
  }

  .isZebraStriped .cellsRow:nth-child(even) & {
    background-color: var(--color-bg-stripe);
  }

  &.isActive,
  .cellsRow:hover &,
  .isZebraStriped .cellsRow:hover & {
    background-color: var(--color-control-bg-ghost);
  }

  &.isDarkned {
    opacity: 0.3;
  }
}

.title {
  position: relative;

  display: inline-block;
}

.icon {
  @mixin button;

  position: absolute;
  z-index: calc(var(--resizer-z) + 1);
  top: calc(var(--space-2xs) * -1);

  box-sizing: content-box;
  width: calc-size(12);
  height: calc-size(12);
  padding: var(--space-2xs);

  cursor: pointer;

  color: var(--color-control-typo-clear);

  fill: currentColor;

  &:hover {
    color: var(--color-control-typo-clear-hover);
  }

  .cell:not(:hover) & {
    visibility: hidden;
  }
}

.iconFilter {
  left: 0;

  transform: translateX(-100%);

  .cell.isFilterOpened & {
    visibility: initial;
  }

  .cell:hover:not(.isFilterOpened) & {
    opacity: 1;
    color: var(--color-control-typo-clear);
  }
}

.iconSort {
  right: 0;

  overflow: visible;

  transform: translateX(100%);

  .cell.isSortingActive & {
    visibility: initial;
  }
}

.selectedFilters {
  border-top: 0;
}

.headerShadowWrapper {
  position: sticky;
  z-index: var(--sticky-top-and-left-z);
  top: var(--table-header-height);
  left: 0;

  grid-column: 1 / -1;
}

.headerShadow {
  position: relative;

  &::before {
    position: absolute;
    right: 0;
    bottom: 0;
    left: 0;

    height: var(--space-s);

    content: '';
    pointer-events: none;

    opacity: 0;
    background: linear-gradient(180deg, var(--shadow-color), transparent);

    transition: opacity var(--fast-transition);
    transform: translateY(100%);

    .showHorizontalCellShadow & {
      opacity: 1;
    }
  }
}
