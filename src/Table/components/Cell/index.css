.cell {
  --buttons-wrapper-size: calc(0 * 1px);

  z-index: var(--table-z);

  box-sizing: border-box;

  color: var(--color-typo-primary);
  background-color: var(--color-bg-default);

  &.withoutBorder {
    border: none;
  }

  &.isResized {
    @mixin hyphens;
  }

  &.isClickable {
    cursor: pointer;
  }

  &.isSortable,
  &.isFilterable {
    --buttons-wrapper-size: var(--space-2xl);
  }

  &.isSortable.isFilterable {
    --buttons-wrapper-size: var(--space-4xl);
  }

  &.stickyOnTop,
  &.stickyOnLeft {
    position: sticky;
  }

  &.stickyOnTop {
    z-index: var(--sticky-top-z);
    top: 0;

    &.isResizer {
      z-index: calc(var(--sticky-top-and-left-z) + 1);
    }
  }

  &.stickyOnLeft {
    z-index: var(--sticky-left-z);
    left: 0;

    &.isHeader {
      z-index: var(--sticky-top-and-left-z);
    }

    &.isResizer {
      z-index: calc(var(--sticky-top-and-left-z) + 1);
    }
  }

  &.isHeader {
    font-size: var(--size-text-xs);
    font-weight: bold;
    line-height: var(--line-height-text-s);

    letter-spacing: 0.05em;
    text-transform: uppercase;

    border-bottom: 1px solid var(--color-bg-border);
  }

  &:not(.isHeader) {
    font-size: var(--size-text-s);
    line-height: var(--line-height-text-s);
  }

  &.isBorderTop {
    border-top: var(--table-border);
  }

  &.isBorderLeft {
    border-left: var(--table-border);
  }
}

.wrapper {
  position: relative;

  display: flex;

  box-sizing: border-box;
  height: 100%;
  padding: var(--cell-padding-vertical) var(--cell-padding-horizontal);
  padding-right: calc(
    var(--cell-padding-horizontal) + var(--resizer-width) + var(--buttons-wrapper-size)
  );

  &.withoutPadding {
    padding: 0;
  }

  &.verticalAlignTop {
    align-items: flex-start;
  }

  &.verticalAlignCenter {
    align-items: center;
  }

  &.verticalAlignBottom {
    align-items: flex-end;
  }

  &.horizontalAlignLeft {
    justify-content: flex-start;
  }

  &.horizontalAlignCenter {
    justify-content: center;

    text-align: center;
  }

  &.horizontalAlignRight {
    justify-content: flex-end;

    text-align: right;
  }

  .cell.stickyOnLeft &::after {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;

    width: var(--space-s);

    content: '';
    pointer-events: none;

    opacity: 0;
    background: linear-gradient(90deg, var(--shadow-color), transparent);

    transition: opacity var(--fast-transition);
    transform: translateX(100%);
  }

  .cell.stickyOnLeft.showVerticalCellShadow &::after {
    opacity: 1;
  }

  .cell.isHeader:hover & {
    background: var(--color-bg-stripe);
  }
}
