.main {
  --tooltip-negative-arrow-offset: calc(-2 * var(--arrow-size));
  --tooltip-vertical-padding: var(--space-xs);
  --tooltip-horizontal-padding: var(--space-xs);
  --tooltip-bg-color: var(--color-bg-default);

  /* Задаются через js */
  --arrow-size: 0;
  --arrow-offset: 0;

  position: absolute;

  display: table;

  pointer-events: none;

  &.isHoverable {
    pointer-events: auto;
  }
}

.tooltip {
  position: relative;

  box-sizing: border-box;
  max-width: 400px;
  padding: var(--tooltip-vertical-padding) var(--tooltip-horizontal-padding);

  border-radius: var(--control-radius);
  background-color: var(--tooltip-bg-color);
}

.arrow {
  position: absolute;

  border: var(--arrow-size) solid transparent;

  :matches(.upLeft, .upCenter, .upRight) & {
    bottom: 0;

    border-top-color: var(--tooltip-bg-color);

    transform: translateY(100%);
  }

  .upLeft & {
    right: var(--arrow-offset);
  }

  .upCenter & {
    left: calc(50% - var(--arrow-size));
  }

  .upRight & {
    left: var(--arrow-offset);
  }

  :matches(.downLeft, .downCenter, .downRight) & {
    top: 0;

    border-bottom-color: var(--tooltip-bg-color);

    transform: translateY(-100%);
  }

  .downLeft & {
    right: var(--arrow-offset);
  }

  .downCenter & {
    left: calc(50% - var(--arrow-size));
  }

  .downRight & {
    left: var(--arrow-offset);
  }

  :matches(.rightUp, .rightCenter, .rightDown) & {
    left: 0;

    border-right-color: var(--tooltip-bg-color);

    transform: translateX(-100%);
  }

  .rightUp & {
    bottom: var(--arrow-offset);
  }

  .rightCenter & {
    top: calc(50% - var(--arrow-size));
  }

  .rightDown & {
    top: var(--arrow-offset);
  }

  :matches(.leftUp, .leftCenter, .leftDown) & {
    right: 0;

    border-left-color: var(--tooltip-bg-color);

    transform: translateX(100%);
  }

  .leftUp & {
    bottom: var(--arrow-offset);
  }

  .leftCenter & {
    top: calc(50% - var(--arrow-size));
  }

  .leftDown & {
    top: var(--arrow-offset);
  }
}
