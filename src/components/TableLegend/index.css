.main {
  --resizer-width: 5px;

  overflow: auto;

  width: 100%;
  height: 100%;
}

.table {
  overflow: hidden;

  width: 100%;

  border-spacing: 0;
  border-collapse: collapse;

  &.isFixed {
    width: 0; /* Чтобы и тянулась, и сужалась */

    table-layout: fixed;
  }
}

.dataRow {
  --row-bg-color: transparent;

  background: var(--row-bg-color);

  &:nth-child(even) {
    --row-bg-color: var(--color-bg-stripe);
  }

  &.isActive {
    --row-bg-color: var(--color-control-bg-ghost);
  }

  &.isHoverable {
    cursor: pointer;

    &:hover {
      --row-bg-color: var(--color-control-bg-ghost-hover);
    }
  }
}

.cell {
  --cell-padding-horizontal: var(--space-m);
  --cell-padding-vertical: var(--space-s);
  box-sizing: border-box;
  padding-top: var(--cell-padding-vertical);
  padding-right: calc(var(--cell-padding-horizontal) + var(--resizer-width));
  padding-bottom: var(--cell-padding-vertical);
  padding-left: var(--cell-padding-horizontal);

  vertical-align: top;

  &.sizeL {
    --cell-padding-vertical: var(--space-s);
  }

  &.sizeM {
    --cell-padding-vertical: var(--space-xs);
  }

  &.sizeS {
    --cell-padding-vertical: var(--space-2xs);
  }

  &.isHeader {
    position: relative;

    padding-top: 0;
    padding-bottom: 0;

    vertical-align: middle;
  }

  &:not(.isHeader) {
    hyphens: auto;
  }

  &.alignLeft {
    text-align: left;
  }

  &.alignRight {
    text-align: right;
  }

  &.alignCenter {
    text-align: center;

    & > * {
      margin: 0 auto;
    }
  }
}

.titleWrapper {
  position: relative;

  display: inline-block;
}

.title {
  @mixin button;

  font-weight: inherit;
  line-height: inherit;

  cursor: pointer;
  text-align: inherit;
  letter-spacing: inherit;
  text-transform: inherit;

  color: inherit;
}

.icon {
  @mixin button;

  position: absolute;
  z-index: calc(var(--resizer-z) + 1);
  top: var(--line-height-text-m);

  box-sizing: content-box;
  width: calc-size(12);
  height: calc-size(12);
  padding: var(--space-2xs);

  cursor: pointer;

  color: var(--color-control-typo-clear);

  fill: currentColor;

  &:hover {
    color: var(--color-control-typo-clear-hover);
  }

  .cell:not(:hover) & {
    visibility: hidden;
  }
}

.iconFilter {
  left: 0;

  transform: translate(-100%, -100%);

  .cell.isFilterOpened & {
    visibility: initial;
  }

  .cell:hover:not(.isFilterOpened) & {
    opacity: 1;
    color: var(--color-control-typo-clear);
  }
}

.iconSort {
  right: 0;

  overflow: visible;

  transform: translate(100%, -100%);

  .cell.isSortingActive & {
    visibility: initial;
  }
}

.selectedFiltersRow {
  background: none !important;
}
