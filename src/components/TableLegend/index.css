.main {
  overflow: auto;

  width: 100%;
  height: 100%;
}

.table {
  overflow: hidden;

  width: 100%;

  border-spacing: 0;
  border-collapse: collapse;

  &.isFixed {
    width: 0; /* Чтобы и тянулась, и сужалась */

    table-layout: fixed;
  }

  & tr:nth-child(even) {
    background: var(--color-bg-stripe);
  }
}

.rowL {
  height: 45px;
}

.rowM {
  height: 37px;
}

.rowS {
  height: 30px;
}

.cell {
  --column-padding-horizontal: var(--space-m);
  --column-padding-vertical: var(--space-s);

  padding-top: var(--column-padding-vertical);
  padding-right: calc(var(--column-padding-horizontal) + var(--resizer-width));
  padding-bottom: var(--column-padding-vertical);
  padding-left: var(--column-padding-horizontal);

  vertical-align: top;

  &.isHeader {
    position: relative;

    padding-top: 0;
    padding-bottom: 0;

    vertical-align: middle;
  }

  &:not(.isHeader) {
    hyphens: auto;
  }

  &.alignLeft {
    text-align: left;
  }

  &.alignRight {
    text-align: right;
  }

  &.alignCenter {
    text-align: center;

    & > * {
      margin: 0 auto;
    }
  }
}

.titleWrapper {
  position: relative;

  display: inline-block;
}

.title {
  font-weight: inherit;
  line-height: inherit;

  cursor: pointer;
  text-align: inherit;
  letter-spacing: inherit;
  text-transform: inherit;

  color: inherit;
}

.icon {
  position: absolute;
  z-index: calc(var(--resizer-z) + 1);
  top: 0;
  bottom: 0;

  box-sizing: content-box;
  margin: auto 0;
  padding: 4px;

  cursor: pointer;

  color: var(--color-control-typo-clear);

  fill: currentColor;

  &:hover {
    color: var(--color-control-typo-clear-hover);
  }

  @nest .cell:not(:hover) & {
    visibility: hidden;
  }
}

.iconFilter {
  @nest .cell:hover:not(.isFilterOpened) & {
    opacity: 1;
    color: var(--color-control-typo-clear);
  }
}

.iconSort {
  right: 0;

  overflow: visible;

  transform: translateX(100%);

  @nest .cell.isSortingActive & {
    visibility: initial;
  }
}

.selectedFiltersRow {
  background: none !important;
}
